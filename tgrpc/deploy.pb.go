// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deploy.proto

package tio_control_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeployRequest struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Config               string   `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Sid                  int32    `protobuf:"varint,3,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Stype                int32    `protobuf:"varint,5,opt,name=stype,proto3" json:"stype,omitempty"`
	InstanceNum          int32    `protobuf:"varint,6,opt,name=instanceNum,proto3" json:"instanceNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployRequest) Reset()         { *m = DeployRequest{} }
func (m *DeployRequest) String() string { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()    {}
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05f09e103004e384, []int{0}
}

func (m *DeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployRequest.Unmarshal(m, b)
}
func (m *DeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployRequest.Marshal(b, m, deterministic)
}
func (m *DeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployRequest.Merge(m, src)
}
func (m *DeployRequest) XXX_Size() int {
	return xxx_messageInfo_DeployRequest.Size(m)
}
func (m *DeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployRequest proto.InternalMessageInfo

func (m *DeployRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *DeployRequest) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

func (m *DeployRequest) GetSid() int32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *DeployRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeployRequest) GetStype() int32 {
	if m != nil {
		return m.Stype
	}
	return 0
}

func (m *DeployRequest) GetInstanceNum() int32 {
	if m != nil {
		return m.InstanceNum
	}
	return 0
}

type SrvMeta struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvMeta) Reset()         { *m = SrvMeta{} }
func (m *SrvMeta) String() string { return proto.CompactTextString(m) }
func (*SrvMeta) ProtoMessage()    {}
func (*SrvMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_05f09e103004e384, []int{1}
}

func (m *SrvMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvMeta.Unmarshal(m, b)
}
func (m *SrvMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvMeta.Marshal(b, m, deterministic)
}
func (m *SrvMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvMeta.Merge(m, src)
}
func (m *SrvMeta) XXX_Size() int {
	return xxx_messageInfo_SrvMeta.Size(m)
}
func (m *SrvMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SrvMeta proto.InternalMessageInfo

func (m *SrvMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*DeployRequest)(nil), "DeployRequest")
	proto.RegisterType((*SrvMeta)(nil), "SrvMeta")
}

func init() { proto.RegisterFile("deploy.proto", fileDescriptor_05f09e103004e384) }

var fileDescriptor_05f09e103004e384 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0xc7, 0x8d, 0xdb, 0xaa, 0x7d, 0xea, 0x46, 0x09, 0x22, 0x61, 0x20, 0x94, 0x1e, 0xa4, 0x78,
	0x08, 0xa8, 0xdf, 0x40, 0xbc, 0xba, 0x43, 0x3b, 0x2f, 0xde, 0x62, 0xfa, 0x38, 0x02, 0x6d, 0x9e,
	0xda, 0x66, 0x95, 0x7e, 0x0b, 0xef, 0x7e, 0x59, 0x59, 0x3a, 0x5f, 0x76, 0xf3, 0xf6, 0x7f, 0xe3,
	0x97, 0x17, 0x38, 0x2b, 0xb1, 0xa9, 0x68, 0x90, 0x4d, 0x4b, 0x8e, 0x96, 0x91, 0x26, 0xdb, 0xb9,
	0xd1, 0xa4, 0x9f, 0x0c, 0xe6, 0x0f, 0xbe, 0xcd, 0xf1, 0x6d, 0x8b, 0x9d, 0xe3, 0xe7, 0x30, 0x33,
	0xb5, 0xda, 0xa0, 0x60, 0x09, 0xcb, 0xc2, 0x7c, 0x34, 0xfc, 0x02, 0x02, 0x4d, 0xf6, 0xd5, 0x6c,
	0xc4, 0xb1, 0x8f, 0xf7, 0x8e, 0xc7, 0x30, 0xe9, 0x4c, 0x29, 0x26, 0x09, 0xcb, 0x66, 0xf9, 0x4e,
	0x72, 0x0e, 0x53, 0xab, 0x6a, 0x14, 0x53, 0xbf, 0xf3, 0x7a, 0xc7, 0xec, 0xdc, 0xd0, 0xa0, 0x98,
	0xf9, 0xdd, 0x68, 0x78, 0x02, 0x91, 0xb1, 0x9d, 0x53, 0x56, 0xe3, 0x6a, 0x5b, 0x8b, 0xc0, 0x77,
	0x7f, 0xa3, 0xf4, 0x12, 0x4e, 0x8a, 0xb6, 0x7f, 0x44, 0xa7, 0x7e, 0xb0, 0xec, 0x17, 0x7b, 0xfb,
	0xc1, 0x20, 0x5e, 0x1b, 0x1a, 0xef, 0x5f, 0x60, 0xdb, 0x1b, 0x8d, 0x3c, 0x83, 0x70, 0x85, 0xef,
	0x63, 0xc6, 0x17, 0xf2, 0xe0, 0x71, 0xcb, 0x50, 0xae, 0x0d, 0xe5, 0xd8, 0x54, 0x43, 0x7a, 0xc4,
	0xaf, 0x60, 0xfe, 0xd4, 0x94, 0xca, 0xe1, 0xf7, 0x19, 0xa7, 0x72, 0xaf, 0x0e, 0x77, 0xd7, 0x10,
	0x15, 0x5a, 0x55, 0xea, 0x1f, 0xcc, 0xfb, 0xf8, 0x79, 0xe1, 0x0c, 0x49, 0x4d, 0xd6, 0xb5, 0x54,
	0xc9, 0xfe, 0xe6, 0x25, 0xf0, 0x1f, 0x7d, 0xf7, 0x15, 0x00, 0x00, 0xff, 0xff, 0x84, 0xfd, 0x25,
	0x2e, 0x85, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TioDeployServiceClient is the client API for TioDeployService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TioDeployServiceClient interface {
	NewDeploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*TioReply, error)
	UpdateSrvMeta(ctx context.Context, in *SrvMeta, opts ...grpc.CallOption) (*TioReply, error)
	ScalaDeploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*TioReply, error)
}

type tioDeployServiceClient struct {
	cc *grpc.ClientConn
}

func NewTioDeployServiceClient(cc *grpc.ClientConn) TioDeployServiceClient {
	return &tioDeployServiceClient{cc}
}

func (c *tioDeployServiceClient) NewDeploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*TioReply, error) {
	out := new(TioReply)
	err := c.cc.Invoke(ctx, "/TioDeployService/NewDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tioDeployServiceClient) UpdateSrvMeta(ctx context.Context, in *SrvMeta, opts ...grpc.CallOption) (*TioReply, error) {
	out := new(TioReply)
	err := c.cc.Invoke(ctx, "/TioDeployService/UpdateSrvMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tioDeployServiceClient) ScalaDeploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*TioReply, error) {
	out := new(TioReply)
	err := c.cc.Invoke(ctx, "/TioDeployService/ScalaDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TioDeployServiceServer is the server API for TioDeployService service.
type TioDeployServiceServer interface {
	NewDeploy(context.Context, *DeployRequest) (*TioReply, error)
	UpdateSrvMeta(context.Context, *SrvMeta) (*TioReply, error)
	ScalaDeploy(context.Context, *DeployRequest) (*TioReply, error)
}

// UnimplementedTioDeployServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTioDeployServiceServer struct {
}

func (*UnimplementedTioDeployServiceServer) NewDeploy(ctx context.Context, req *DeployRequest) (*TioReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDeploy not implemented")
}
func (*UnimplementedTioDeployServiceServer) UpdateSrvMeta(ctx context.Context, req *SrvMeta) (*TioReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSrvMeta not implemented")
}
func (*UnimplementedTioDeployServiceServer) ScalaDeploy(ctx context.Context, req *DeployRequest) (*TioReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScalaDeploy not implemented")
}

func RegisterTioDeployServiceServer(s *grpc.Server, srv TioDeployServiceServer) {
	s.RegisterService(&_TioDeployService_serviceDesc, srv)
}

func _TioDeployService_NewDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TioDeployServiceServer).NewDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TioDeployService/NewDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TioDeployServiceServer).NewDeploy(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TioDeployService_UpdateSrvMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvMeta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TioDeployServiceServer).UpdateSrvMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TioDeployService/UpdateSrvMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TioDeployServiceServer).UpdateSrvMeta(ctx, req.(*SrvMeta))
	}
	return interceptor(ctx, in, info, handler)
}

func _TioDeployService_ScalaDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TioDeployServiceServer).ScalaDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TioDeployService/ScalaDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TioDeployServiceServer).ScalaDeploy(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TioDeployService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TioDeployService",
	HandlerType: (*TioDeployServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewDeploy",
			Handler:    _TioDeployService_NewDeploy_Handler,
		},
		{
			MethodName: "UpdateSrvMeta",
			Handler:    _TioDeployService_UpdateSrvMeta_Handler,
		},
		{
			MethodName: "ScalaDeploy",
			Handler:    _TioDeployService_ScalaDeploy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deploy.proto",
}
